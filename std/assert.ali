(defun 'assert_type '(index in comp) '(
    cond
    '((eq (type in) comp) ())
    '(true (throw (format "invalid type at index $$: expected $$, found $$" index comp (type in))))
))

(defun 'assert_nil '(index in) '(assert_type index in 'nil))
(defun 'assert_list '(index in) '(assert_type index in 'list))
(defun 'assert_float '(index in) '(assert_type index in 'float))
(defun 'assert_int '(index in) '(assert_type index in 'integer))
(defun 'assert_symbol '(index in) '(assert_type index in 'symbol))
(defun 'assert_lambda '(index in) '(assert_type index in 'lambda))
(defun 'assert_bool '(index in) '(assert_type index in 'boolean))
(defun 'assert_char '(index in) '(assert_type index in 'char))

(defun 'assert_number '(index in) '(
    cond
    '((eq (type in) 'integer) ())
    '((eq (type in) 'float) ())
    '(true (throw (format "invalid type at index $$: expected number, found $$" index (type in))))
))